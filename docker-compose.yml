version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      XDEBUG_CONFIG: "client_host=172.26.0.1"
      PHP_XDEBUG: 1
      PHP_XDEBUG_MODE: debug
      PHP_XDEBUG_LOG_LEVEL: 0
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ../php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ../nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "127.0.0.1:3306:3306"
    environment:
      MYSQL_DATABASE: testshop
      MYSQL_ROOT_PASSWORD: 111111
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ../mysql/db:/var/lib/mysql
      - ../mysql/my.cnf:/etc/mysql/my.cnf
      - ../mysql/init:/docker-entrypoint-initdb.d
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - "1025:8025"

  redis:
    container_name: 'redis'
    image: 'redis:latest'
    ports:
      - '6379:6379'

  node:
    image: node:10-alpine
    container_name: node
    volumes:
      - .:/application
    ports:
      - "8086:8080"
    working_dir: /application
    command: ["npm", "run", "dev"]

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
